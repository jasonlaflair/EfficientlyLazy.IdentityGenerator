require 'albacore'

$VERSION_NUMBER = ENV["version"] || '0.9.5.0'
$CONFIG = ENV["config"] || "Debug"


desc "Debug Build"
task :default => [:setDebugConfigLevel, :updateAssemblyInfo, :buildSolution, :runUnitTests, :cleanup]

desc "Create Release Build"
task :release => [:setReleaseConfigLevel, :updateAssemblyInfo, :buildSolution, :buildDocumentation, :zipBinaries, :createNuspecFile, :createNugetPackage, :cleanup]

task :setDebugConfigLevel do
	$CONFIG = "Debug"
end

task :setReleaseConfigLevel do
	$CONFIG = "Release"
end

task :cleanup do
	FileUtils.rm_rf "Build/#{$CONFIG}" if File.exists?("Build/#{$CONFIG}")
	FileUtils.rm_rf "Build/EfficientlyLazy.IdentityGenerator.nuspec" if File.exists?("Build/EfficientlyLazy.IdentityGenerator.nuspec")
end

desc "Version"
assemblyinfo :updateAssemblyInfo do |asm|
  asm.version = "#{$VERSION_NUMBER}"
  asm.file_version = "#{$VERSION_NUMBER}"
  asm.custom_attributes :AssemblyInformationalVersionAttribute => "#{$VERSION_NUMBER}", :AssemblyInformationalVersionAttribute => "#{$VERSION_NUMBER} (#{$CONFIG})"
  asm.company_name = "LaFlair.NET"
  asm.product_name = "EfficientlyLazy.IdentityGenerator for .NET"
  asm.copyright = "Copyright (c) LaFlair.NET 2009-2012"
  asm.output_file = "src/SharedAssemblyInfo.cs"
  asm.com_visible = false
end

desc "build"
msbuild :buildSolution do |msb|
  msb.properties = { :configuration => $CONFIG }
  msb.targets = [ :clean, :build ]
  msb.solution = "src/EfficientlyLazy.IdentityGenerator.sln"
  msb.verbosity = "minimal"
  msb.other_switches :toolsVersion => 4.0
end

desc "XUnit Test Runner"
xunit :runUnitTests do |xunit|
	xunit.command = "tools/xunit/xunit.console.exe"
	xunit.assembly = "Build/#{$CONFIG}/tests/net35/EfficientlyLazy.IdentityGenerator.Tests.dll"
end


msbuild :buildDocumentation do |msb|
	lines = ""
	versionFile = "doc/EfficientlyLazy.IdentityGenerator.shfbproj"
	
	File.open(versionFile, 'r') do |f|
		lines = f.readlines
	end

	File.open(versionFile, 'w') do |content|
		lines.each do |line|
			if line.include?("<SHFBSchemaVersion>")
				content.puts "    <SHFBSchemaVersion>#{$VERSION_NUMBER}</SHFBSchemaVersion>"
			else
				content.puts line
			end
		end
	end

	msb.properties = { :configuration => $CONFIG }
	msb.targets = [ :clean, :build ]
	msb.solution = versionFile
	msb.verbosity = "minimal"
	msb.other_switches :toolsVersion => 4.0
end

zip :zipBinaries do |zip|
	 zip.directories_to_zip "Build/#{$CONFIG}/tools/net35"
	 zip.additional_files "Build/#{$CONFIG}/content/net35/EfficientlyLazy.IdentityGenerator.chm"
	 zip.output_file = "EfficientlyLazy.IdentityGenerator.v#{$VERSION_NUMBER}.zip"
	 zip.output_path = "Build"
end

desc "create the nuget package"
nuspec :createNuspecFile do |nuspec|
   nuspec.id="EfficientlyLazy.IdentityGenerator"
   nuspec.version = "#{$VERSION_NUMBER}"
   nuspec.authors = "Jason LaFlair"
   nuspec.owners = "Jason LaFlair"
   nuspec.description = ".Net library create random identities that include Name, Address, City, State, Zip, SSN and Date of Birth."
   nuspec.title = "EfficientlyLazy.IdentityGenerator"
   nuspec.language = "en-US"
   nuspec.licenseUrl = "http://opensource.org/licenses/Apache-2.0"
   nuspec.projectUrl = "https://github.com/jasonlaflair/EfficientlyLazy.IdentityGenerator"
   nuspec.working_directory = "build"
   nuspec.output_file = "EfficientlyLazy.IdentityGenerator.nuspec"
   nuspec.tags = "identity generator random name address city state zip ssn dob"
   nuspec.file "#{$CONFIG}\\lib\\net35\\EfficientlyLazy.IdentityGenerator.dll", "lib\\net35\\EfficientlyLazy.IdentityGenerator.dll"
   nuspec.file "#{$CONFIG}\\lib\\net35\\EfficientlyLazy.IdentityGenerator.xml", "lib\\net35\\EfficientlyLazy.IdentityGenerator.xml"
   nuspec.file "#{$CONFIG}\\content\\net35\\EfficientlyLazy.IdentityGenerator.chm", "content\\net35\\EfficientlyLazy.IdentityGenerator.chm"
end

desc "create the nuget package"
nugetpack :createNugetPackage do |nuget|
   nuget.command     = "tools/Nuget/nuget.exe"
   nuget.nuspec      = "build/EfficientlyLazy.IdentityGenerator.nuspec"
   nuget.base_folder = "build/"
   nuget.output      = "build/"
end


